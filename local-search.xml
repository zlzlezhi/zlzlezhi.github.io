<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>金鹏笔记</title>
    <link href="/blog/2024/02/20/jinpeng_biji/"/>
    <url>/blog/2024/02/20/jinpeng_biji/</url>
    
    <content type="html"><![CDATA[<hr><p>1.15</p><h1 id="购买物品"><a href="#购买物品" class="headerlink" title="购买物品"></a>购买物品</h1><p>我购买了一些物品来做实验。</p><p>我购买的东西如下：</p><p>**1.**恒温箱</p><p>__2.__树莓派 zero 2w</p><p>__3.__红外摄像头</p><p>__4.__红外补光灯</p><p>__5.__蚕豆</p><p>​</p><p>​我购买恒温箱是因为需要一个可控的温度环境，而树莓派和红外摄像头及补光灯是用来在黑暗时获得清晰照片的，最后的蚕豆是用来作为实验对象的。</p><hr><p>1.20</p><h1 id="自提恒温箱"><a href="#自提恒温箱" class="headerlink" title="自提恒温箱"></a>自提恒温箱</h1><p>​由于我们的恒温箱是在咸鱼上购买的，运费又很贵，所以爸爸选择了自提。</p><p>​自提的地点在一个名叫 <em>金盏村</em> 的村子，爸爸开车到达金盏村后又给卖家打了电话，根据卖家的指引到达了取货的地点，上了楼，又从楼上搬下个大白铁箱子，隔近了一看，才知道这就是实验用的恒温箱。</p><p>​之后，我们把恒温箱装在车上，高高兴兴的回了家</p><hr><p>1.22</p><h1 id="编写拍照程序"><a href="#编写拍照程序" class="headerlink" title="编写拍照程序"></a>编写拍照程序</h1><p>​我使用树莓派来作为我拍摄延时摄影的工具，所以我编写了一个自动拍摄延时摄影的 <strong>shell</strong> 程序。</p><p>​程序分为了5部分：对时，打开补光灯，__拍照__，关闭补光灯，等待</p><p>​其中第一个执行的是对时，这个部分需要在主循环开始前使用__<code>ntp date</code><strong>命令进行对时。对时完毕后会进入主循环，这个主循环是 <strong>while True__，它是一个死循环，也就是说这个程序只能通过</strong><code>kill</code><strong>或者__control + C or Z__来退出。进入主循环后程序就会开始第二个部分：打开补光灯。这个动作需要写一个</strong>&#x2F;dev__目录下的文件就可以打开GPIO从而启动补光灯。接下来就是最关键的环节：__拍照</strong>  了。拍照是通过调用树莓派独有的__<code>raspill</code><strong>命令完成的，我们可以在命令后面加上<code>-o xxx</code>来指定文件名，而当你把文件名指定为当前的时间时，我们就可以获得以日期命名的图片了。关闭补光灯这个步骤同样要写入</strong>&#x2F;dev__目录下的文件，只不过这次要额外删除GPIO的文件。最后的这个步骤就是等待了，由于我需要每5分钟拍摄一张图片，所以我们需要执行一条__<code>sleep 300</code>__命令。</p><hr><p>1.25</p><h1 id="制作光照试验箱"><a href="#制作光照试验箱" class="headerlink" title="制作光照试验箱"></a>制作光照试验箱</h1><p>​我需要一个箱子来进行隔绝外界的光线，以便进行光照有关的实验。</p><p>​我首先找来了一个多余的纸箱，然后在这个箱子上打开一个大孔，并把灯和摄像头的线从这个孔塞进去，再把树莓派粘在外面，接上从箱内引出的摄像头CSI排线，就完成了光照实验箱的制作，我给树莓派通上电源，放入植物，进行拍摄延时摄影。</p><hr><p>1.30</p><h1 id="树莓派zero-2w向树莓派-4B-代码移植"><a href="#树莓派zero-2w向树莓派-4B-代码移植" class="headerlink" title="树莓派zero 2w向树莓派 4B 代码移植"></a>树莓派zero 2w向树莓派 4B 代码移植</h1><p>​除了树莓派zero外，我还有一个树莓派4b，因此我想再搭建一套环境进行并行实验，步骤如下：</p><p>1.复制代码到Pi 4B</p><p>2.调试</p><p>​在调试的过程中遇到了一些问题，首先是无法执行 __<code>ntp date</code><strong>，解决方案是执行命令</strong><code>sudo apt-get install ntp</code><strong>来安装ntp，其次是照片总是被命名为<code>var1.jpg</code>而不是期望的<code>年-月-日-时-分.jpg</code>，经过我的一番排查后发现，导致这个原因是因为我我误将</strong><code>raspill -o $var1.jpg</code><strong>写为了</strong><code>raspill -o var1.jpg</code>__，在加入了 <strong>$</strong> 之后，代码恢复了正常。</p><p>最后我成功使用树莓派4B移植了定时拍照的代码。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>var1=0<br>ntpdate cn.pool.ntp.org<br>while true<br>do<br>echo 1 &gt; /sys/class/gpio/export<br>echo out &gt; /sys/class/gpio/gpio1/direction<br>echo 1 &gt; /sys/class/gpio/gpio1/value<br>sleep 5<br>echo on<br><br>var1=`date +%F`&quot;-&quot;`date +%H`&quot;-&quot;`date +%M`<br>echo pai_start<br>raspistill -o /home/gmt/jinpeng_pics/$var1.jpg -t 5000<br>echo pai_stop<br>echo -n &quot;[&quot;`date` &gt;&gt; CPUtemp.log<br>echo -n &quot;]  &quot; &gt;&gt; CPUtemp.log<br>python CPUtemp.py &gt;&gt; CPUtemp.log<br>echo cp_on<br>cp /home/gmt/jinpeng_pics/$var1.jpg /var/www/html/abc.jpg<br>echo cp_off<br>sleep 2<br>echo 0 &gt; /sys/class/gpio/gpio1/value<br>echo 1 &gt; /sys/class/gpio/unexport<br>echo off<br><br>sleep 300<br>done<br><br><br></code></pre></td></tr></table></figure><p>​</p><hr><p>2.7</p><h1 id="拍摄光照-恒夜组"><a href="#拍摄光照-恒夜组" class="headerlink" title="拍摄光照-恒夜组"></a>拍摄光照-恒夜组</h1><p>​这是我第一次用我制做的光照试验箱进行实验，所以我选择了一组较简单的恒夜作为第一组。</p><p>​由于我上次已经编写好了程序，所以这次我直接挑选了一盆比较矮的花，刚好勉强塞进箱子里，最后打开树莓派，启动程序就可以开始拍摄延时摄影了！</p><hr><p>2.10</p><h1 id="温度-对照组实验"><a href="#温度-对照组实验" class="headerlink" title="温度-对照组实验"></a>温度-对照组实验</h1><p>​今天，大部分实验已经做完了，只剩下温度的两组实验，而这两组实验是需要恒温箱的，所以我们不能并行做实验，因此，我选择了这组实验。</p><p>​由于树莓派4B的发热太严重，容易影响恒温箱恒定的温度，所以在恒温箱里我们都用树莓派zero 2w来作为延时摄影的相机。 </p><p>​我把树莓派用热熔胶粘在恒温箱门的内壁，之后把电源线从门缝中穿过，插在电源上，调整好摄像头的角度，最后，由于光照条件是恒夜，我们还要把恒温箱的玻璃窗贴上不透明的遮光板，给树莓派换上红外摄像头和红外补光灯，启动树莓派，调好恒温箱温度，树莓派就可以自动开始拍摄图片了，而我们只需要定时通过操作面板升高&#x2F;降低恒温箱内的温度就可以了。</p><hr><p>2.12</p><h1 id="温度-实验组实验"><a href="#温度-实验组实验" class="headerlink" title="温度-实验组实验"></a>温度-实验组实验</h1><p>​现在实验已经只剩最后一组了，这一组依然需要恒温箱，但这次我就只能拿一个比较高的花来实验。</p><p>​我费了九牛二虎之力终于把植物塞了进去，这时，树莓派又突然从箱门上掉了下来，于是，我只能把树莓派再重新粘回去，重新调整摄像头角度，最后终于开始了这组实验。</p><hr><p>2.18</p><h1 id="合成视频"><a href="#合成视频" class="headerlink" title="合成视频"></a>合成视频</h1><p>​我们的温度-对照组实验已经做完了，为了方便我们分析和观察，我们需要合成一个视频。</p><p>​我们选择了__<code>ffmpeg</code>__命令做为合成视频的工具，但是，在合成视频的时候经常遇到各种各样的问题。</p><p>​最开始，我们遇到的问题是  <strong>ffmpeg</strong>  不识别图片，经过一番搜索后，我得知：这个错误是由于我们的命令名称指定的方式不对，我们把代码从__<code>ffmpeg -i &#39;2024*.jpg&#39; out.mp4</code><strong>换成了</strong><code>ffmpeg  -pattern_type glob -i &#39;2024*.jpg&#39; out.mp4</code>__之后，解决了这个问题。</p><p>​虽然命令能开始合成了，但是我发现每次合成的视频都只有1帧就结束了，于是我们查看  <strong>ffmpeg</strong> 的日志发现，视频在刚开始合成的时候就有一个进程 <em>kill</em> 了 <strong>ffmpeg</strong> 进程，之后，我们在调查时发现，在开始合成视频的时候树莓派的可用内存几乎在一瞬间从2GB降低到几百MB，紧接着，<strong>ffmpeg</strong> 就又被_kill_了，于是，我们终于发现了问题的原因：__ffmpeg__在合成视频的时候占用了太多的内存，导致系统触发了OOM ( Out Of Momery ，内存溢出)机制，强行_kill_了内存占用最多的进程，那个把合成视频的 <strong>ffmpeg</strong> 进程_kill_掉的自然也是系统进程了。</p><p>​我很快就有了解决方案：把所有图片通过__<code>rsync</code>__命令同步到家里的 <strong>QNAP</strong> 上，并在 <strong>QNAP</strong> 上用 <strong>ffmpeg</strong> 成功合成了视频。</p><hr><p>2.19</p><h1 id="论文撰写"><a href="#论文撰写" class="headerlink" title="论文撰写"></a>论文撰写</h1><p>​所有的实验材料都准备完了，终于来到了最后的阶段——论文撰写。</p><p>​我把这些原始数据都分别放好，然后开始写论文。</p><p>​在我和爸爸的协助下，所有的框架都完成了，最后，我把这些原始数据全部浓缩成了图表、结论等直观的数据，填到论文里，就这样，一篇崭新的论文诞生了！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/blog/2024/02/20/hello-world/"/>
    <url>/blog/2024/02/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>如何注册github账号来评论或制作一个像这样的网站</title>
    <link href="/blog/2024/02/18/github/"/>
    <url>/blog/2024/02/18/github/</url>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>你需要一个邮箱，一个电脑。</p><h2 id="1-打开github"><a href="#1-打开github" class="headerlink" title="1.打开github"></a>1.打开github</h2><p>用浏览器访问  github.com ，如果访问不了就等会再试。<br>如果成功访问你会看到这个</p><p><del>图片加载 有点慢 超超超超超级慢，你要耐心等亿~会。</del></p><p><strong>这图片好像加载不出来</strong></p><p><img src="/blog/../images/image1.png" alt="github"></p><p>然后按右上角的那个 <strong><code>Sign Up</code></strong> 你就可以开始注册了。</p><p><mark>开着点翻译<mark> 按提示做</p><p>你就可以注册好了（__Tips：名称建议设的好记一点，如果你想做这样的Blog网站的话。__）</p>]]></content>
    
    
    
    <tags>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
